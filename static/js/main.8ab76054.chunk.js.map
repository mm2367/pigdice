{"version":3,"sources":["staticText.ts","Welcome.tsx","Die.tsx","PlayerCards.tsx","GameScoreBoard.tsx","RulesModal.tsx","PlayPigDice.tsx","Routes.tsx","index.tsx"],"names":["staticTexts","rules","ruleOne","ruleOneA","ruleTwo","ruleThree","ruleFour","holdButtonText","doublesHold","winnerDeclared","diceFeedback","snakeEyes","oneRolled","Welcome","props","className","icon","pigIcon","color","width","height","to","Die","faceMappings","faDiceOne","faDiceTwo","faDiceThree","faDiceFour","faDiceFive","faDiceSix","rolling","face","size","PlayerCards","playerCards","playerIndex","players","length","push","isActive","score","turnScore","GameScoreBoard","gameBoard","winnerBoard","sort","first","second","map","items","id","totalScore","RulesModal","ReactDOM","Modal","show","Header","Title","Body","document","body","PlayPigDice","React","dice","setDice","showModal","setShowModal","setTurnScore","activePlayerID","setActivePlayerID","winner","setWinner","message","setMessage","setRolling","numPlayers","setNumPlayer","listOfWinners","setListOfWinners","setPlayers","console","log","pointMappings","faces","initPlayers","index","handleKeyDown","e","target","addEventListener","removeEventListener","validateTurn","diceOneVal","diceTwoVal","updatedPlayers","holdTurn","currPlayers","selfHold","updateListOfWinners","filter","player","forEach","obj","undefined","updateWinner","reset","holdButtonDisabled","type","max","min","defaultValue","name","onChange","event","parseInt","value","handleNumOfPlayersChange","place","effect","data-tip","data-for","onClick","disabled","Math","floor","random","pointOne","pointTwo","setTimeout","rollDice","htmlColor","Routes","basename","exact","path","component","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ab76054.chunk.js","sourcesContent":["export const staticTexts={\n    rules:{\n\n        ruleOne: 'If neither die show a 1, the sum of both dice is added to their turn total,\\n' +\n            '            and the player’s turn continues unless they choose to “hold”',\n        ruleOneA: ' A “hold” will end their turn and apply the sum of all rolls from that\\n' +\n            '            turn (the “turn score”) to their “total score” (generally represents\\n' +\n            '            the score accrued across turns - read on. . . )',\n        ruleTwo: ' If the player rolls a 1 on either die, they add nothing to their total score\\n' +\n            '            and it becomes the next player’s turn',\n        ruleThree: 'If BOTH dice show 1’s (“snake eyes”), the player scores nothing on their\\n' +\n            '            turn, their total score goes to 0, and their turn ends',\n        ruleFour: 'If any double (matching die except for “snake eyes”) is rolled, the sum of\\n' +\n            '            the dice rolled is added to the turn total, as with any roll, but the player\\n' +\n            '            does not have the option to “hold” and must roll again.'\n    },\n    holdButtonText: {\n        doublesHold: 'Hold is disabled after rolling doubles',\n        winnerDeclared: 'Game is Over.Please Start New Game'\n    },\n    diceFeedback:{\n        snakeEyes: 'Oh No! You rolled Snake Eyes',\n        oneRolled:'Oh No! You rolled a One',\n    }\n}\n","import * as React from \"react\";\nimport {Link, RouteComponentProps} from \"react-router-dom\";\nimport {staticTexts} from \"./staticText\";\nimport Icon from \"@iconify/react\";\nimport pigIcon from '@iconify-icons/mdi/pig';\nexport interface WelcomeDispatchProps {\n\n}\n\nexport type WelcomeProps = WelcomeDispatchProps & RouteComponentProps;\nexport const Welcome: React.FunctionComponent<WelcomeProps> = (props: WelcomeProps) => {\n    return (\n        <div className={'welcome container my-5 py-5'}>\n            <div className={'d-flex justify-content-center align-items-center'}>\n                <Icon icon={pigIcon} color=\"pink\" width={60} height={60} />\n                <h1 className={'d-flex justify-content-center align-items-center my-4'}>Let's Play Pig Dice</h1>\n                <Icon icon={pigIcon} color=\"pink\" width={60} height={60} />\n            </div>\n            <h2 className={'text-center'}>Rules</h2>\n            <ul>\n                <li>{staticTexts.rules.ruleOne}</li>\n                <ul>\n                    <li>{staticTexts.rules.ruleOneA}</li>\n                </ul>\n                <li>{staticTexts.rules.ruleTwo}</li>\n                <li>{staticTexts.rules.ruleThree}</li>\n                <li>{staticTexts.rules.ruleFour}</li>\n            </ul>\n            <div className={'d-flex justify-content-center'}>\n                <Link className={'btn btn-primary d-flex align-items-center justify-content-center my-3'} to={'pigdice'}>Let's Play!</Link>\n            </div>\n        </div>\n\n    )\n};\n\n","import * as React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faDiceFive, faDiceFour, faDiceOne, faDiceSix, faDiceThree, faDiceTwo} from \"@fortawesome/free-solid-svg-icons\";\n\nexport type face = \"one\" | \"two\" | \"three\" | \"four\" | \"five\" | \"six\";\n\nexport interface DieStateProps {\n    face: face;\n    rolling: boolean;\n}\n\nexport const Die: React.FunctionComponent<DieStateProps> = (props: DieStateProps) => {\n    const faceMappings = {\n        \"one\": faDiceOne,\n        \"two\": faDiceTwo,\n        \"three\": faDiceThree,\n        \"four\": faDiceFour,\n        \"five\": faDiceFive,\n        \"six\": faDiceSix\n    };\n    return (\n        <FontAwesomeIcon className={`Die m-5 ${props.rolling && 'Die-shaking'}`}\n                         icon={props.face ? faceMappings[props.face] : faDiceOne} size={\"10x\"}/>\n\n    )\n};\n","import * as React from \"react\";\nimport {Player} from \"./PigDiceTypes\";\n\nexport interface PlayerCardProps {\n    players: Player[]\n    turnScore: number;\n    diceFeedback: string;\n}\n\nexport const PlayerCards: React.FunctionComponent<PlayerCardProps> = (props: PlayerCardProps) => {\n    let playerCards = [];\n    for (let playerIndex = 0; playerIndex < props.players.length; playerIndex++) {\n        playerCards.push(\n            <div className={'w-50 player-heading player-heading_player-one text-center' +\n            `${props.players[playerIndex].isActive ? ' active' : ''}`}>\n                <div className={'d-flex align-items-center justify-content-center'}>\n                    <div>{`Player ${playerIndex + 1} :`}</div>\n                    <div className={'ml-2'}>{props.players[playerIndex].score}</div>\n                </div>\n                <div className={'d-flex justify-content-center subtitle'}>\n                    <div>{'Current Score: '}</div>\n                    <div className={'ml-2'}>\n                        {props.players[playerIndex].isActive ? props.turnScore : 0}\n                    </div>\n                </div>\n                <div className={'message-placeholder subtitle'}>\n                    {props.players[((playerIndex + 1) % props.players.length)].isActive && props.diceFeedback}</div>\n            </div>);\n    }\n    return (\n        <div className={'mt-5 d-flex px-5 align-items-center text-uppercase'}>\n            {playerCards}\n        </div>\n    )\n};\n","import * as React from \"react\";\nimport {Winner} from \"./PigDiceTypes\";\n\nexport interface GameScoreBoardStateProps {\n    winnerBoard: Winner[];\n    className?:string\n}\n\nexport const GameScoreBoard: React.FunctionComponent<GameScoreBoardStateProps> = (props: GameScoreBoardStateProps) => {\n    let gameBoard;\n    if (props.winnerBoard && props.winnerBoard.length > 0) {\n        const sortedWinnerBoard=props.winnerBoard.sort((first, second) => {\n            return second['totalScore'] - first['totalScore'];\n        });\n            gameBoard = sortedWinnerBoard.map((items) => {\n                return (\n                    <tr>\n                        <td>Player {items.id + 1}</td>\n                        <td>{items.totalScore}</td>\n                    </tr>\n                )\n            })\n        }\n\n    return (\n        <div className={'game-score-board '+ props.className}>\n            <h3 className={'text-center'}>Game Score Board</h3>\n           <div>\n               <table className={'w-100'}>\n                <thead className={'text-center'}>\n                <tr>\n                    <th>Players</th>\n                    <th>Total Score</th>\n                </tr>\n                </thead>\n                <tbody className={'text-center'}>\n                {gameBoard}\n                </tbody>\n            </table>\n           </div>\n        </div>\n\n\n    )\n\n}\n","import Modal from 'react-bootstrap/Modal'\nimport * as React from \"react\";\nimport * as ReactDOM from 'react-dom';\nimport {staticTexts} from \"./staticText\";\n\nexport interface ModalProps {\n    show: boolean\n}\n\nexport const RulesModal: React.FunctionComponent<ModalProps> = (props: ModalProps) => {\n\n    return (\n        ReactDOM.createPortal(\n            <Modal\n                show={props.show}\n            >\n                <Modal.Header>\n                    <Modal.Title>Rules</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ul>\n                        <li>{staticTexts.rules.ruleOne}</li>\n                        <ul>\n                            <li>{staticTexts.rules.ruleOneA}</li>\n                        </ul>\n                        <li>{staticTexts.rules.ruleTwo}</li>\n                        <li>{staticTexts.rules.ruleThree}</li>\n                        <li>{staticTexts.rules.ruleFour}</li>\n                    </ul>\n                </Modal.Body>\n            </Modal>, document.body\n        )\n    )\n}\n","import * as React from \"react\";\nimport {Die, face} from \"./Die\";\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport ReactTooltip from \"react-tooltip\";\nimport {staticTexts} from \"./staticText\";\nimport {PlayerCards} from \"./PlayerCards\";\nimport {GameScoreBoard} from \"./GameScoreBoard\";\nimport {Player, Winner} from \"./PigDiceTypes\";\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport {RulesModal} from \"./RulesModal\";\n\nexport interface PlayPigDiceStateProps {\n    numPlayers: number;\n    players: Player[];\n}\n\nexport interface PlayPigDiceDispatchProps {\n    updateWinners(player: Player): void\n}\n\nexport type PlayPigDiceProps = PlayPigDiceStateProps & PlayPigDiceDispatchProps;\nexport const PlayPigDice: React.FunctionComponent<PlayPigDiceProps> = (props: PlayPigDiceProps) => {\n    const [dice, setDice] = React.useState<face[]>([\"one\", \"one\"]);\n    const [showModal, setShowModal] = React.useState<boolean>(false);\n    const [turnScore, setTurnScore] = React.useState<number>(0);\n    const [activePlayerID, setActivePlayerID] = React.useState<number>(0);\n    const [winner, setWinner] = React.useState<Player>(null);\n    const [message, setMessage] = React.useState('');\n    const [rolling,setRolling]=React.useState(false);\n    const [numPlayers, setNumPlayer] = React.useState<number>(2);\n    const [listOfWinners, setListOfWinners] = React.useState<Winner[]>([]);\n    const [players, setPlayers] = React.useState<Player[]>([{id: 0, score: 0, isActive: true}, {\n        id: 1,\n        score: 0,\n        isActive: true\n    }]);\n    console.log(showModal)\n    const pointMappings = {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6};\n    const faces: face[] = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"];\n\n    React.useEffect(() => {\n        let initPlayers: Player[] = [];\n\n        for (let index = 0; index < numPlayers; index++) {\n            initPlayers.push({id: index, score: 0, isActive: index === 0})\n        }\n        setPlayers(initPlayers);\n    }, [numPlayers]);\n    const handleKeyDown = (e: KeyboardEvent) => {\n        if (showModal && e.target && (e.target as Element).className ==='fade modal show') {\n            console.log((e.target as Element).className );\n            console.log('hello')\n            setShowModal(false);\n        }\n    };\n    React.useEffect(() => {\n        document.addEventListener('click', handleKeyDown);\n        return () => document.removeEventListener('click', handleKeyDown);\n    });\n    const rollDice = () => {\n        console.log('rolling');\n        setRolling(true);\n        let dice = [faces[Math.floor(Math.random() * faces.length)], faces[Math.floor(Math.random() * faces.length)]]\n        setDice(dice);\n        let pointOne = pointMappings[dice[0]];\n        let pointTwo = pointMappings[dice[1]];\n        setTurnScore(turnScore + pointOne + pointTwo);\n        validateTurn(pointOne, pointTwo)\n        setTimeout(() => {\n            setRolling(false)\n        }, 1000)\n    };\n\n    const validateTurn = (diceOneVal: number, diceTwoVal: number): void => {\n        let updatedPlayers: Player[] = [...players];\n        if (diceOneVal === 1 && diceTwoVal === 1) {\n            updatedPlayers[activePlayerID % updatedPlayers.length].score = 0;\n            setMessage(staticTexts.diceFeedback.snakeEyes);\n            holdTurn(updatedPlayers, false)\n        } else if (diceTwoVal === 1 || diceOneVal === 1) {\n            setMessage(staticTexts.diceFeedback.oneRolled);\n            holdTurn(updatedPlayers, false)\n        } else {\n            setMessage('');\n        }\n        setPlayers(updatedPlayers);\n    };\n\n    const updateWinner = (player: Player, updateListOfWinners: Winner[]) => {\n        let playerIndex;\n        setWinner(player);\n        updateListOfWinners.forEach((obj, index) => {\n            if (obj.id === player.id) {\n                playerIndex = index;\n            }\n        })\n        if (playerIndex !== undefined) {\n            updateListOfWinners[playerIndex].totalScore += player.score\n        } else {\n            updateListOfWinners.push({id: player.id, totalScore: player.score})\n        }\n        setListOfWinners(updateListOfWinners);\n    };\n\n    const holdTurn = (currPlayers: Player[], selfHold: boolean) => {\n        let updatedPlayers: Player[] = [...currPlayers];\n        let updateListOfWinners: Winner[] = listOfWinners ? [...listOfWinners] : [];\n        setActivePlayerID(updatedPlayers.filter((player) => player.isActive)[0].id);\n        updatedPlayers.forEach((player) => {\n            if (player.isActive && selfHold) {\n                player.score += turnScore;\n                player.isActive = false;\n                if (player.score >= 10) {\n                    updateWinner(player, updateListOfWinners)\n                }\n            } else if (player.id === ((activePlayerID + 1) % updatedPlayers.length)) {\n\n                player.isActive = true\n            }\n        });\n        if (selfHold) {\n            setMessage('')\n        }\n        updatedPlayers[activePlayerID % updatedPlayers.length].isActive = false;\n        setActivePlayerID(activePlayerID + 1);\n        setTurnScore(0);\n        setPlayers(updatedPlayers);\n    };\n    const reset = () => {\n        let updatedPlayers: Player[] = [...players];\n        setWinner(null);\n        players.forEach((player) => {\n            player.score = 0;\n            player.isActive = player.id === 0;\n        });\n        setTurnScore(0);\n        setDice(['one', 'one']);\n        setMessage('');\n        setActivePlayerID(0);\n        setPlayers(updatedPlayers);\n\n    };\n    const handleNumOfPlayersChange = (event) => {\n        setNumPlayer(parseInt(event.target.value));\n        reset();\n    };\n    const handleModalClick = (e: React.MouseEvent<HTMLSpanElement>) => {\n      //  e.stopPropagation();\n        setShowModal(!showModal)\n\n    };\n    const holdButtonDisabled = (dice[0] === dice[1] && dice[0] !== \"one\") || winner !== null;\n    return (\n        <>\n            <div className={'container pig-dice'}>\n                <h1 className={'text-center text-uppercase'}>{winner ? `Player ${winner.id + 1} Wins!` : 'Pig Dice'}</h1>\n                <div className={'d-flex justify-content-center mt-2'}><label>Enter Number of Players (2-4):\n                    <input type={\"number\"} max={4} min={2} defaultValue={2}\n                           name={'numberOfPlayers'}\n                           onChange={(event) => handleNumOfPlayersChange(event)}/>\n                    <ReactTooltip id={'rules'} place={'bottom'}\n                                  effect={'solid'}>{'View Rules'}</ReactTooltip>\n                    <span className={'launch-icon ml-2'} data-tip={'rules'}\n                          data-for={'rules'}\n                          onClick={(e: React.MouseEvent<HTMLSpanElement>) => handleModalClick(e)}><LaunchIcon/></span>\n                </label>\n                </div>\n                <PlayerCards players={players} turnScore={turnScore} diceFeedback={message}/>\n                <div className={'d-flex justify-content-center'}>\n                    <Die face={dice[0]} rolling={rolling}/>\n                    <Die face={dice[1]} rolling={rolling}/>\n                </div>\n                <div className={'d-flex justify-content-center align-items-center'}>\n                    <button className={'mx-4'} disabled={winner !== null} onClick={() => rollDice()}>Roll</button>\n                    <RefreshIcon htmlColor={\"#E18D96\"} data-tip={'refresh'} data-for={'refresh'}\n                                 onClick={() => reset()}/>\n                    <ReactTooltip id={'refresh'} place={'bottom'}\n                                  effect={'solid'}>{'Start new game'}</ReactTooltip>\n                    <div data-tip={'disabled-hold'} data-for={'disabled-hold'}>{holdButtonDisabled ?\n                        <ReactTooltip id={'disabled-hold'} place={'bottom'}\n                                      effect={'solid'}>{winner ? staticTexts.holdButtonText.winnerDeclared : staticTexts.holdButtonText.doublesHold}</ReactTooltip> :\n                        <div/>}\n                        <button className={'mx-4'} onClick={() => holdTurn(players, true)}\n                                disabled={holdButtonDisabled}>Hold\n                        </button>\n                    </div>\n                </div>\n                <GameScoreBoard className={'mt-5'} winnerBoard={listOfWinners}/>\n            </div>\n            <RulesModal show={showModal}/>\n        </>\n    )\n};\n","import {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport * as React from 'react';\nimport {Welcome} from \"./Welcome\";\nimport {PlayPigDice} from \"./PlayPigDice\";\n\nexport const Routes = () => {\n    return (\n        <BrowserRouter basename={'/'}>\n            <Switch/>\n            <Route exact={true} path={'/'} component={Welcome}/>\n            <Route exact path={'/pigdice'} component={PlayPigDice}/>\n        </BrowserRouter>\n\n    )\n};\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport {Routes} from \"./Routes\";\nimport './styles/app.scss';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<React.StrictMode><Routes/></React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}